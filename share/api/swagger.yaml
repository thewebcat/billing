swagger: "2.0"

info:
  title: "{{title}}"
  version: "1.0"

basePath: /api/v1.0

schemes:
  - http

consumes:
  - "application/json"
produces:
  - "application/json"


paths:

  /tranfers:
    get:
      tags: [Tranfers]
      summary: Get all tranfers list
      operationId: billing.api.views.TransferHandler.list
      responses:
        200:
          description: Gets transfers list
    post:
      tags: [Tranfers]
      summary: Create a new transfer order
      operationId: billing.api.views.TransferHandler.post
      parameters:
        - name: transfer
          in: body
          schema:
            $ref: '#/definitions/Transfer'
      responses:
        201:
          description: Transfer order created successfully
          schema:
            $ref: '#/definitions/Transfer'


  /tranfers/{uuid}:
    get:
      tags: [Tranfers]
      summary: Get tranfer by uuid
      operationId: billing.api.views.TransferHandler.get
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Gets transfers list
        404:
          description: Transfer does not exist

  /clients:
    get:
      tags: [Clients]
      summary: Get all clients list
      operationId: billing.api.views.ClientsHandler.list
      responses:
        200:
          description: Return clients list
    post:
      tags: [Clients]
      summary: Get client summary info
      operationId: billing.api.views.ClientsHandler.post
      parameters:
        - name: client
          in: body
          schema:
            $ref: '#/definitions/Client'
      responses:
        201:
          description: Register new Client object in a system
          schema:
            $ref: '#/definitions/Client'

  /clients/{uuid}:
    get:
      tags: [Clients]
      summary: Get client by uuid
      operationId: billing.api.views.ClientsHandler.get
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Client successfully returned
        404:
          description: Client does not exist

  /deposit:
    post:
      tags: [Deposit/Withdrawal]
      summary: Make deposit order
      operationId: billing.api.views.DepositWithdrawal.post_deposit
      parameters:
        - in: body
          name: deposit
          required: true
          schema:
            $ref: '#/definitions/Deposit'
      responses:
        201:
          description: Deposit successfully completed

  /withdrawal:
    post:
      tags: [Deposit/Withdrawal]
      summary: Make withdrawal order
      operationId: billing.api.views.DepositWithdrawal.post_withdrawal
      parameters:
        - in: body
          name: withdrawal
          required: true
          schema:
            $ref: '#/definitions/Withdrawal'
      responses:
        201:
          description: Withdrawal successfully completed

  /report/{uuid}:
    get:
      tags: [Reports]
      summary: Get clients report by uuid
      operationId: billing.api.views.report
      parameters:
        - $ref: '#/parameters/uuid'
        - name: start_date
          in: query
          description: Start report date
          type: string
          format: customdate
        - name: end_date
          in: query
          description: End report date
          type: string
          format: customdate
      responses:
        200:
          description: Report successfully returned
        404:
          description: Reports does not exist

  /courses/{date}:
    get:
      tags: [Reports]
      summary: Get courses by date
      operationId: billing.api.views.courses
      parameters:
        - $ref: '#/parameters/date'
        - $ref: '#/parameters/currency'
      responses:
        200:
          description: Report successfully returned
        404:
          description: Reports does not exist

parameters:
  uuid:
    in: path
    name: uuid
    description: UUID of client
    type: string
    required: true
    pattern: "^[a-zA-Z0-9-]+$"

  date:
    in: path
    name: date
    description: Cources date
    format: customdate
    type: string
    required: true

  currency:
    in: query
    name: currency
    description: Currency
    type: string


definitions:
  Client:
    type: object
    required:
      - first_name
      - country
      - city
    properties:
      uuid:
        type: string
        description: Unique identifier
        example: "5e45f735-5de4-49ed-89d4-a79d7589a096"
        readOnly: true
      first_name:
        type: string
        description: Clients's first name
        example: "Susie"
        minLength: 1
        maxLength: 100
      last_name:
        type: string
        description: Clients's last name
        example: "Susie"
        minLength: 1
        maxLength: 100
      country:
        type: string
        description: Client's county
        example: "Russia"
        minLength: 1
      city:
        type: string
        description: Client's city
        example: "Moscow"
        minLength: 1
      currency:
        type: string
        example: USD
        enum: [USD, EUR, CAD, CNY]
        description: A transaction type
      created_at:
        type: string
        format: date-time
        description: Creation time
        example: "2015-07-07T15:49:51.230+02:00"
        readOnly: true

  Transfer:
    type: object
    required:
      - amount
      - source_id
      - destination_id
    properties:
      uuid:
        type: string
        description: A unique identifier
        readOnly: true
      amount:
        type: number
        example: 1.00
        description: A transfer amount
      source_id:
        type: string
        description: A unique identifier
        example: "41cdc6d4-7bc2-46e4-a4d6-703b81648a40"
      destination_id:
        type: string
        description: A unique identifier
        example: "70f8b112-f906-42c1-ae53-8e40a0129cb5"
      created_at:
        type: string
        format: date-time
        description: Creation time
        readOnly: true

  Deposit:
    type: object
    required:
      - amount
      - wallet_id
    properties:
      amount:
        type: number
        example: 1.00
        description: A deposit amount
      wallet_id:
        type: string
        description: A wallet identifier
        example: "5e45f735-5de4-49ed-89d4-a79d7589a096"

  Withdrawal:
    type: object
    required:
      - amount
      - wallet_id
    properties:
      amount:
        type: number
        example: 1.00
        description: A withdrawal amount
      wallet_id:
        type: string
        description: A wallet identifier
        example: "5e45f735-5de4-49ed-89d4-a79d7589a096"